[2021-07-05 08:41:51,806] {taskinstance.py:876} INFO - Dependencies all met for <TaskInstance: get_as_dataframe.get_diseases 2021-07-05T08:41:49.353787+00:00 [queued]>
[2021-07-05 08:41:51,876] {taskinstance.py:876} INFO - Dependencies all met for <TaskInstance: get_as_dataframe.get_diseases 2021-07-05T08:41:49.353787+00:00 [queued]>
[2021-07-05 08:41:51,877] {taskinstance.py:1067} INFO - 
--------------------------------------------------------------------------------
[2021-07-05 08:41:51,878] {taskinstance.py:1068} INFO - Starting attempt 1 of 1
[2021-07-05 08:41:51,878] {taskinstance.py:1069} INFO - 
--------------------------------------------------------------------------------
[2021-07-05 08:41:51,914] {taskinstance.py:1087} INFO - Executing <Task(PythonOperator): get_diseases> on 2021-07-05T08:41:49.353787+00:00
[2021-07-05 08:41:51,918] {standard_task_runner.py:52} INFO - Started process 2271 to run task
[2021-07-05 08:41:51,939] {standard_task_runner.py:76} INFO - Running: ['airflow', 'tasks', 'run', 'get_as_dataframe', 'get_diseases', '2021-07-05T08:41:49.353787+00:00', '--job-id', '1128', '--pool', 'default_pool', '--raw', '--subdir', 'DAGS_FOLDER/get_as_Dataframe.py', '--cfg-path', '/tmp/tmp_5_m6_48', '--error-file', '/tmp/tmp5p6w45ri']
[2021-07-05 08:41:51,945] {standard_task_runner.py:77} INFO - Job 1128: Subtask get_diseases
[2021-07-05 08:41:52,043] {logging_mixin.py:104} INFO - Running <TaskInstance: get_as_dataframe.get_diseases 2021-07-05T08:41:49.353787+00:00 [running]> on host airflowvm
[2021-07-05 08:41:52,179] {taskinstance.py:1280} INFO - Exporting the following env vars:
AIRFLOW_CTX_DAG_OWNER=airflow
AIRFLOW_CTX_DAG_ID=get_as_dataframe
AIRFLOW_CTX_TASK_ID=get_diseases
AIRFLOW_CTX_EXECUTION_DATE=2021-07-05T08:41:49.353787+00:00
AIRFLOW_CTX_DAG_RUN_ID=manual__2021-07-05T08:41:49.353787+00:00
[2021-07-05 08:41:52,205] {base.py:69} INFO - Using connection to: id: ***_default. Host: localhost, Port: 5432, Schema: , Login: ***, Password: ***, extra: {'cursor': 'realdictcursor'}
[2021-07-05 08:41:52,229] {python.py:151} INFO - Done. Returned value was: ['name_disease', 'number_pacients']
[2021-07-05 08:41:52,230] {xcom.py:228} ERROR - Could not serialize the XCom value into JSON. If you are using pickle instead of JSON for XCom, then you need to enable pickle support for XCom in your airflow config.
[2021-07-05 08:41:52,230] {taskinstance.py:1481} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/sandbox/lib/python3.8/site-packages/airflow/models/taskinstance.py", line 1137, in _run_raw_task
    self._prepare_and_execute_task_with_callbacks(context, task)
  File "/home/airflow/sandbox/lib/python3.8/site-packages/airflow/models/taskinstance.py", line 1311, in _prepare_and_execute_task_with_callbacks
    result = self._execute_task(context, task_copy)
  File "/home/airflow/sandbox/lib/python3.8/site-packages/airflow/models/taskinstance.py", line 1344, in _execute_task
    self.xcom_push(key=XCOM_RETURN_KEY, value=result)
  File "/home/airflow/sandbox/lib/python3.8/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/sandbox/lib/python3.8/site-packages/airflow/models/taskinstance.py", line 1919, in xcom_push
    XCom.set(
  File "/home/airflow/sandbox/lib/python3.8/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/sandbox/lib/python3.8/site-packages/airflow/models/xcom.py", line 79, in set
    value = XCom.serialize_value(value)
  File "/home/airflow/sandbox/lib/python3.8/site-packages/airflow/models/xcom.py", line 226, in serialize_value
    return json.dumps(value).encode('UTF-8')
  File "/usr/lib/python3.8/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/lib/python3.8/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/lib/python3.8/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/lib/python3.8/json/encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type DataFrame is not JSON serializable
[2021-07-05 08:41:52,233] {taskinstance.py:1524} INFO - Marking task as FAILED. dag_id=get_as_dataframe, task_id=get_diseases, execution_date=20210705T084149, start_date=20210705T084151, end_date=20210705T084152
[2021-07-05 08:41:52,311] {local_task_job.py:151} INFO - Task exited with return code 1
